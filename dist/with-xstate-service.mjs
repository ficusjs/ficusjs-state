function withXStateService(e,s){return{...s,created(){this._subscribeCallback=()=>{this.computedCache={},this._processRender()},this._setupService(e),s.created&&s.created.call(this)},send(e){this.fsmService.send(e)},mounted(){this._subscribeToFsmService(!1),s.mounted&&s.mounted.call(this)},updated(){this._subscribeToFsmService(!1),s.updated&&s.updated.call(this)},removed(){this._unsubscribeFromFsmService(),s.removed&&s.removed.call(this)},_wrapXStateService:()=>({_xstateService:e}),_setupService(e){if(e=e._xstateService?e:this._wrapXStateService(e),this.fsmService=e,e&&e._xstateService&&e._xstateService.subscribe&&"function"==typeof e._xstateService.subscribe){const s={state:void 0};e.getters&&(s.getters=e.getters),this.fsmSubscriptionCallback=e=>{this.fsm.state=e,this._subscribeCallback()},this.fsm=s,this.send=e=>this.fsmService._xstateService.send(e),this._subscribeToFsmService()}},_startFsmService(){this.fsmService&&this.fsmService._xstateService&&this.fsmSubscription&&0===this.fsmService._xstateService.status&&this.fsmService._xstateService.start()},_subscribeToFsmService(e=!0){this.fsmService&&this.fsmService._xstateService&&this.fsmService._xstateService.subscribe&&"function"==typeof this.fsmService._xstateService.subscribe&&!this.fsmSubscription&&(this.fsmSubscription=this.fsmService._xstateService.subscribe(this.fsmSubscriptionCallback),e&&this.fsmSubscriptionCallback(),this._startFsmService())},_unsubscribeFromFsmService(){this.fsmService&&this.fsmService._xstateService&&this.fsmSubscription&&"function"==typeof this.fsmSubscription&&(this.fsmSubscription(),this.fsmSubscription=null)}}}export{withXStateService};
