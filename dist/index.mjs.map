{"version":3,"file":"index.mjs","sources":["../src/base-persist.mjs","../src/with-store.mjs","../src/util/is-promise.mjs","../src/store.mjs","../src/app-state.mjs","../src/state-machine.mjs","../src/with-local-state.mjs","../src/with-state-machine.mjs","../src/util/wrap-xstate-service.mjs","../src/with-xstate-service.mjs","../src/with-worker-store.mjs","../src/lib/xstate-fsm.mjs","../src/xstate-service.mjs"],"sourcesContent":["class BasePersist {\n  /**\n   * Create an instance of persistence with the unique namespace identifier\n   * @param {string} namespace\n   * @param {object} storage\n   * @param {object} options\n   */\n  constructor (namespace, storage, options = {}) {\n    this.namespace = namespace\n    this.storage = storage\n    this.options = options\n    this._init()\n  }\n\n  /**\n   * Private method for initializing\n   * @private\n   */\n  _init () {\n    if ('performance' in globalThis && this.options.clearOnReload) {\n      // @ts-ignore\n      const entries = globalThis.performance.getEntriesByType('navigation').map(e => e.type)\n      const lastUpdated = this.lastUpdated()\n      if (lastUpdated && entries.includes('reload')) {\n        this.removeState()\n      }\n    }\n  }\n\n  /**\n   * Set state in the persistence store\n   * @param {*} state\n   */\n  setState (state) {\n    if (state) {\n      this.storage.setItem(`${this.namespace}:state`, this._normalizeState(state))\n      this.storage.setItem(`${this.namespace}:lastUpdated`, new Date().getTime().toString())\n    } else {\n      this.removeState()\n    }\n  }\n\n  /**\n   * Normalize state before persisting\n   * @param state\n   * @returns {string}\n   * @private\n   */\n  _normalizeState (state) {\n    if (typeof state === 'object' && (this.options.saveState && typeof this.options.saveState === 'function')) {\n      return JSON.stringify(this.options.saveState(state))\n    } else if (typeof state !== 'string') {\n      return JSON.stringify(state)\n    }\n    return state\n  }\n\n  /**\n   * Get state from the persistence store\n   * @returns {*}\n   */\n  getState () {\n    const state = this.storage.getItem(`${this.namespace}:state`)\n    return state ? JSON.parse(state) : undefined\n  }\n\n  /**\n   * Get the last updated time in milliseconds since the Unix Epoch\n   * @returns {number}\n   */\n  lastUpdated () {\n    const lastUpdated = this.storage.getItem(`${this.namespace}:lastUpdated`)\n    return lastUpdated ? parseInt(lastUpdated, 10) : undefined\n  }\n\n  /**\n   * Remove state from the persistence store\n   */\n  removeState () {\n    this.storage.removeItem(`${this.namespace}:state`)\n    this.storage.removeItem(`${this.namespace}:lastUpdated`)\n  }\n}\n\n/**\n * Function to create persistence for the store\n * @param {string} namespace\n * @param {string} [storageName]\n * @param {object} [options]\n * @returns {BasePersist}\n */\nfunction createPersist (namespace, storageName = 'session', options) {\n  if (storageName === 'local') {\n    return new BasePersist(namespace, globalThis.localStorage, options)\n  }\n  return new BasePersist(namespace, globalThis.sessionStorage, options)\n}\n\nexport { BasePersist, createPersist }\n","export function withStore (store, options) {\n  return {\n    ...options,\n    created () {\n      // create a subscription callback\n      this._subscribeCallback = () => {\n        // clear the getter cache\n        this.computedCache = {}\n\n        // Run the render processor now that there's changes\n        this.isCreatedCalled && this._processRender()\n      }\n      this.setStore(store)\n      if (options.created) options.created.call(this)\n    },\n    mounted () {\n      this._subscribeToStores(false)\n      if (options.mounted) options.mounted.call(this)\n    },\n    updated () {\n      this._subscribeToStores(false)\n      if (options.updated) options.updated.call(this)\n    },\n    removed () {\n      this._unsubscribeFromStores()\n      if (options.removed) options.removed.call(this)\n    },\n    setStore (store) {\n      this.store = store\n      this._subscribeToStores()\n    },\n    _subscribeToStores (invokeSubscribeCallback = true) {\n      if (this.store && this.store.subscribe && typeof this.store.subscribe === 'function' && !this.unsubscribe) {\n        this.unsubscribe = this.store.subscribe(this._subscribeCallback)\n        if (invokeSubscribeCallback) this._subscribeCallback()\n      } else if (this.store && typeof this.store === 'object' && !this.store.subscribe) {\n        this.unsubscribe = {}\n        const keys = Object.keys(this.store)\n        keys.forEach(k => {\n          if (this.store[k] && this.store[k].subscribe && typeof this.store[k].subscribe === 'function' && !this.unsubscribe[k]) {\n            this.unsubscribe[k] = this.store[k].subscribe(this._subscribeCallback)\n          }\n        })\n        if (invokeSubscribeCallback) this._subscribeCallback()\n      }\n    },\n    _unsubscribeFromStores () {\n      if (this.store && this.unsubscribe && typeof this.unsubscribe === 'object') {\n        const keys = Object.keys(this.unsubscribe)\n        keys.forEach(k => {\n          this.unsubscribe[k]()\n        })\n        this.unsubscribe = null\n      } else if (this.store && this.unsubscribe && typeof this.unsubscribe === 'function') {\n        this.unsubscribe()\n        this.unsubscribe = null\n      }\n    }\n  }\n}\n","export function isPromise (obj) {\n  return (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function'\n}\n","import { createPersist } from './base-persist.mjs'\nimport { isPromise } from './util/is-promise.mjs'\n\nexport class Store {\n  constructor (options) {\n    const self = this\n\n    // An object to hold our state\n    self.state = {}\n\n    // create a getter cache\n    self.getterCache = {}\n\n    // A status enum to set during actions and mutations\n    self.status = 'resting'\n\n    // Transactional flag for batch actions/mutations without triggering re-rendering\n    self.transaction = false\n    self.transactionCache = {}\n\n    // We store callbacks for when the state changes in here\n    self.callbacks = []\n\n    // Allow actions to be added to this instance\n    this._processActions(options)\n\n    // initial state values\n    let initialState = options.initialState || {}\n    self.copyOfInitialState = self._copyValue(initialState)\n\n    // time to live settings\n    self.ttl = -1\n    self.lastUpdatedState = {}\n    if (options.ttl) {\n      self.ttl = options.ttl\n      Object.keys(self.copyOfInitialState).forEach(k => (self.lastUpdatedState[k] = new Date().getTime()))\n    }\n\n    // persistence\n    self.persist = undefined\n    if (options.persist) {\n      self.persist = typeof options.persist === 'string' ? createPersist(options.persist) : options.persist\n\n      // check for initial state\n      const initState = self.persist.getState()\n      const lastUpdated = self.persist.lastUpdated()\n      if (initState &&\n        lastUpdated &&\n        (self.ttl === -1 || self._lastUpdatedTimeDiff(lastUpdated) < self.ttl)) {\n        initialState = initState\n      }\n    }\n\n    // set-up state\n    this._processState(initialState)\n  }\n\n  /**\n   * Attach actions to the store instance\n   * @param {object} options\n   * @private\n   */\n  _processActions (options) {\n    const self = this\n    const keys = Object.keys(options)\n    if (!keys.length) return\n\n    // Run through and bind to the component instance\n    keys.forEach(key => {\n      if (!self[key] && typeof options[key] === 'function') {\n        self[key] = options[key].bind(self)\n      }\n    })\n  }\n\n  /**\n   * Set-up the internal state object\n   * @param {object} initialState\n   * @private\n   */\n  _processState (initialState) {\n    const self = this\n    // Set our state to be a Proxy. We are setting the default state by\n    // checking the params and defaulting to an empty object if no default\n    // state is passed in\n    self.state = new Proxy(initialState, {\n      set (state, key, value) {\n        // cache first value changed if we're in transaction mode\n        if (self.transaction && !self.transactionCache[key]) {\n          self.transactionCache[key] = self._copyValue(state[key])\n        }\n\n        // Set the value as we would normally\n        state[key] = value\n        self.lastUpdatedState[key] = new Date().getTime()\n\n        // clear the getter cache\n        self.getterCache = {}\n\n        if (!self.transaction) {\n          // if we have persistence pass the new state to it\n          if (self.persist) {\n            self.persist.setState(self.state)\n          }\n\n          // Reset the status ready for the next operation\n          self.status = 'resting'\n\n          // Fire off our callback processor because if there's listeners,\n          // they're going to want to know that something has changed\n          self._processCallbacks(self.state)\n        }\n\n        return true\n      },\n      get (state, key) {\n        if (self.ttl > -1 && self._lastUpdatedTimeDiff(self.lastUpdatedState[key]) > self.ttl) {\n          if (self.persist) {\n            self.persist.removeState()\n          }\n          return self.copyOfInitialState[key]\n        }\n        return state[key]\n      }\n    })\n  }\n\n  /**\n   * Last updated state time difference in seconds\n   * @param {number} value\n   * @returns {number}\n   * @private\n   */\n  _lastUpdatedTimeDiff (value) {\n    return Math.round((new Date().getTime() - value))\n  }\n\n  /**\n   * A method to set state\n   * @param {Function} stateFn\n   * @memberOf Store\n   */\n  setState (stateFn) {\n    const setter = data => {\n      if (!data || typeof data !== 'object') return\n\n      const isExistingTransaction = this.transaction\n\n      // begin a transaction\n      if (!isExistingTransaction) {\n        this.transactionCache = {}\n        this.transaction = true\n      }\n\n      for (const key in data) {\n        if (!this.state[key] || (this.state[key] !== data[key])) this.state[key] = data[key]\n      }\n\n      // end the transaction\n      if (!isExistingTransaction) {\n        this.transaction = false\n\n        // if we have persistence pass the new state to it\n        if (this.persist) {\n          this.persist.setState(this.state)\n        }\n\n        this._processCallbacks(this.state)\n      }\n    }\n\n    // Get a new version of the state by running the mutation and storing the result of it\n    const res = stateFn(this.state)\n\n    // set the state\n    isPromise(res) ? res.then(setter) : setter(res)\n  }\n\n  /**\n   * A method to return state\n   * @param {string|function} key\n   * @returns {*}\n   */\n  getState (key) {\n    // if key is not defined\n    if (!key || (typeof key !== 'string' && typeof key !== 'function')) return undefined\n\n    // check the getter cache first\n    if (!this.getterCache[key]) {\n      let result\n      if (typeof key === 'function') {\n        result = key(this.state)\n      } else {\n        // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n        // Regex explained: https://regexr.com/58j0k\n        const keyArray = Array.isArray(key) ? key : key.match(/([^[.\\]])+/g)\n\n        // get the result\n        // @ts-ignore\n        result = keyArray.reduce((prevObj, key) => prevObj && prevObj[key], this.state)\n      }\n\n      // if the result is not defined\n      if (result == null) return undefined\n\n      // cache the result\n      this.getterCache[key] = result\n    }\n\n    return this.getterCache[key]\n  }\n\n  /**\n   * Fire off each callback that's run whenever the state changes\n   * We pass in some data as the one and only parameter.\n   * Returns a boolean indicating if the callbacks were called\n   * @private\n   * @param {object} data\n   * @returns {boolean}\n   */\n  _processCallbacks (data) {\n    if (!this.callbacks.length) {\n      return false\n    }\n\n    // We've got callbacks, so loop each one and fire it off\n    this.callbacks.forEach(callback => callback(data))\n\n    return true\n  }\n\n  /**\n   * Allow an outside entity to subscribe to state changes with a valid callback.\n   * Returns a function for unsubscription\n   *\n   * @param {function} callback\n   * @returns {function}\n   */\n  subscribe (callback) {\n    if (typeof callback !== 'function') {\n      throw new Error('Dude, you can only subscribe to store changes with a valid function')\n    }\n\n    // create an unsubscribe function\n    const unsubscribe = () => {\n      this.callbacks = this.callbacks.filter(c => c !== callback)\n    }\n\n    // A valid function, so it belongs in our collection\n    if (!this.callbacks.includes(callback)) this.callbacks.push(callback)\n\n    return unsubscribe\n  }\n\n  /**\n   * Copy any value\n   * @param value\n   * @returns {any}\n   * @private\n   */\n  _copyValue (value) {\n    if (!value) return value\n    return JSON.parse(JSON.stringify(value))\n  }\n\n  /**\n   * Clear the store and reset back to the initial state\n   * @param {boolean} notifySubscribers A boolean to indicate if subscribers should be notified\n   * @memberOf Store\n   */\n  clear (notifySubscribers = true) {\n    this.getterCache = {}\n    this.transactionCache = {}\n    this.lastUpdatedState = {}\n\n    // remove any persistence\n    if (this.persist) {\n      this.persist.removeState()\n    }\n\n    // start a transaction\n    this.transaction = true\n    this.status = 'clear'\n\n    // merge the copy of initial state with the current state\n    const initialState = this._copyValue(this.copyOfInitialState)\n    for (const key in initialState) {\n      this.state[key] = initialState[key]\n    }\n\n    this.transaction = false\n    this.status = 'resting'\n\n    if (notifySubscribers) this._processCallbacks(this.state)\n  }\n}\n","import { createPersist } from './base-persist.mjs'\nimport { withStore } from './with-store.mjs'\nimport { Store } from './store.mjs'\n\n/**\n * Function to create a store instance\n * @param {string} key\n * @param {object} options\n * @returns {Store}\n */\nfunction createAppState (key, options) {\n  let store = getAppState(key)\n  if (store) return store\n  store = new Store(options)\n  globalThis.__ficusjs__ = globalThis.__ficusjs__ || {}\n  globalThis.__ficusjs__.store = globalThis.__ficusjs__.store || {}\n  globalThis.__ficusjs__.store[key] = store\n  return store\n}\n\n/**\n * Function to retrieve a Store instance\n * @param {string} key\n * @returns {Store|undefined}\n */\nfunction getAppState (key) {\n  if (globalThis.__ficusjs__ && globalThis.__ficusjs__.store && globalThis.__ficusjs__.store[key]) {\n    return globalThis.__ficusjs__.store[key]\n  }\n}\n\nexport { createAppState, getAppState, createPersist, withStore }\n","class StateMachine {\n  /**\n   * Create an instance of a state machine\n   * @param {object} machine\n   */\n  constructor (machine) {\n    this.machine = machine\n  }\n\n  /**\n   * Property to return the initial state\n   * @property\n   * @returns {string}\n   */\n  get initialState () {\n    return this.machine.initial || Object.keys(this.machine.states)[0]\n  }\n\n  /**\n   * Method to transition to another state based on the event\n   * @param {string} state\n   * @param {string} event\n   * @returns {string}\n   */\n  transition (state, event) {\n    return this.machine.states[state].on[event]\n  }\n}\n\n/**\n * Function to create a state machine\n * @param {object} machine\n * @returns {StateMachine}\n */\nexport function createStateMachine (machine) {\n  return new StateMachine(machine)\n}\n","import { isPromise } from './util/is-promise.mjs'\n\nexport function withLocalState (options) {\n  return {\n    ...options,\n    created () {\n      // check the state\n      if (options.state && typeof options.state !== 'function') throw new Error('State must be a function!')\n      this._state = options.state || {}\n\n      // Take whatever is passed and set it as a proxy in local state\n      if (typeof this._state === 'function') {\n        this._state = this._state.bind(this)()\n      }\n      this.state = this._monitorState(this._state)\n\n      // set state method\n      this.setState = (stateFn, callback) => {\n        const setter = data => {\n          if (!data || typeof data !== 'object') return\n          const existingUpdated = this.updated\n          if (callback) {\n            this.updated = () => {\n              callback()\n              this.updated = existingUpdated || undefined\n            }\n          }\n          this.status = 'transaction'\n          for (const key in data) {\n            if (!this.state[key] || (this.state[key] !== data[key])) this.state[key] = data[key]\n          }\n          this.status = 'render'\n          this._processRender()\n        }\n        const res = stateFn(this.state)\n        isPromise(res) ? res.then(setter) : setter(res)\n      }\n\n      if (options.created) options.created.call(this)\n    },\n    _monitorState (objectInstance) {\n      const self = this\n\n      return new Proxy(objectInstance, {\n        set (obj, property, value) {\n          // We don't want to do anything if there's no actual changes to make\n          if (obj[property] === value) return true\n\n          // Allow the value to be set with no dramas\n          obj[property] = value\n\n          // clear the computed cache\n          self.computedCache = {}\n\n          // Run the render processor now that there's changes\n          if (self.status === 'render') self._processRender()\n\n          return true\n        }\n      })\n    }\n  }\n}\n","import { createStateMachine } from './state-machine.mjs'\n\nexport function withStateMachine (stateMachineDefinition, options) {\n  return {\n    ...options,\n    created () {\n      this._stateMachineDefinition = stateMachineDefinition\n      this._stateMachine = createStateMachine(stateMachineDefinition)\n      this.initialState = this._stateMachine.initialState\n      this.state = {\n        context: {},\n        matches (v) {\n          return v === this.value\n        },\n        value: this.initialState\n      }\n      this.setState = (data, callback) => {\n        if (!data || typeof data !== 'object') return\n        const existingUpdated = this.updated\n        if (callback) {\n          this.updated = () => {\n            callback.call(this)\n            this.updated = existingUpdated || undefined\n          }\n        }\n        this.status = 'transaction'\n        for (const key in data) {\n          if (key === 'value') {\n            this.state[key] = data[key]\n          } else if (!this.state.context[key] || (this.state.context[key] !== data[key])) {\n            this.state.context[key] = data[key]\n          }\n        }\n        this.status = 'render'\n        this._processRender()\n      }\n      if (options.created) options.created.call(this)\n    },\n    send (event) {\n      let eventType\n      let eventPayload\n      if (typeof event === 'string') {\n        eventType = event\n      } else {\n        const { type, ...payload } = event\n        eventType = type\n        eventPayload = payload\n      }\n      const { value } = this.state\n      const nextState = this._stateMachine.transition(value, eventType) || value\n      const nextStateValue = typeof nextState === 'object' && nextState.target ? nextState.target : nextState\n      const nextStateAction = typeof nextState === 'object' && nextState.action ? nextState.action : nextState\n      const action = this._stateMachineDefinition.actions && this._stateMachineDefinition.actions[nextStateAction]\n        ? () => this._stateMachineDefinition.actions[nextStateAction].call(this, eventPayload)\n        : () => {}\n      this.setState({ value: nextStateValue }, action)\n    }\n  }\n}\n","import { createPersist } from '../base-persist.mjs'\n\nexport function wrapXStateService (service, getters, persist) {\n  const wrappedService = {\n    _xstateService: service,\n    _getterCache: {},\n    _persist: typeof persist === 'string' ? createPersist(persist) : persist,\n    get status () {\n      if (!this._xstateService) return XStateServiceStatus.INIT\n      return this._xstateService.status\n    },\n    get state () {\n      return this._xstateService.state\n    },\n    subscribe (callback) {\n      return this._xstateService.subscribe(() => {\n        this._getterCache = {}\n        if (this._persist && this._xstateService.status === XStateServiceStatus.RUNNING) {\n          this._persist.setState(this._xstateService.state)\n        }\n        callback()\n      })\n    },\n    send (action) {\n      this._xstateService.send(action)\n    },\n    start () {\n      this._xstateService.start(this._persist ? this._persist.getState() : undefined)\n    }\n  }\n  if (getters) {\n    wrappedService.getters = new Proxy(getters, {\n      get (getters, key) {\n        if (!wrappedService._getterCache[key]) {\n          const result = getters[key](wrappedService._xstateService.state.context)\n          wrappedService._getterCache[key] = result\n        }\n        return wrappedService._getterCache[key]\n      }\n    })\n  }\n  return wrappedService\n}\n\nexport const XStateServiceStatus = Object.freeze({\n  INIT: -1,\n  NOT_STARTED: 0,\n  RUNNING: 1,\n  STOPPED: 2\n})\n","import { wrapXStateService, XStateServiceStatus } from './util/wrap-xstate-service.mjs'\n\nexport function withXStateService (service, options) {\n  return {\n    ...options,\n    created () {\n      this._subscribeCallback = () => {\n        // clear the computed cache\n        this.computedCache = {}\n\n        // Run the render processor now that there's changes\n        this._processRender()\n      }\n      this.setXStateService(service)\n      if (options.created) options.created.call(this)\n    },\n    mounted () {\n      this._subscribeToFsmService(false)\n      if (options.mounted) options.mounted.call(this)\n    },\n    updated () {\n      this._subscribeToFsmService(false)\n      if (options.updated) options.updated.call(this)\n    },\n    removed () {\n      this._unsubscribeFromFsmService()\n      if (options.removed) options.removed.call(this)\n    },\n    setXStateService (service) {\n      this.fsm = service && service.status !== XStateServiceStatus.INIT ? service : wrapXStateService(service)\n      this._fsmSubscriptionCallback = () => {\n        if (this.fsm.status === XStateServiceStatus.RUNNING && this._fsmSubscription) {\n          this._subscribeCallback()\n        }\n      }\n      this._subscribeToFsmService()\n    },\n    _startFsmService () {\n      if (this.fsm && this._fsmSubscription && this.fsm.status === XStateServiceStatus.NOT_STARTED) {\n        this.fsm.start()\n      }\n    },\n    _subscribeToFsmService (invokeSubscribeCallback = true) {\n      if (this.fsm && this.fsm.status !== XStateServiceStatus.INIT && !this._fsmSubscription) {\n        this._fsmSubscription = this.fsm.subscribe(this._fsmSubscriptionCallback)\n        if (invokeSubscribeCallback) this._fsmSubscriptionCallback()\n        this._startFsmService()\n      }\n    },\n    _unsubscribeFromFsmService () {\n      if (this.fsm && this.fsm.status !== XStateServiceStatus.INIT && this._fsmSubscription && typeof this._fsmSubscription === 'function') {\n        this._fsmSubscription()\n        this._fsmSubscription = null\n      }\n    }\n  }\n}\n","export function withWorkerStore (worker, options) {\n  return {\n    ...options,\n    created () {\n      const that = this\n      that.worker = worker\n      globalThis.__ficusjs__ = globalThis.__ficusjs__ || {}\n      globalThis.__ficusjs__.workers = globalThis.__ficusjs__.workers || new Map()\n      if (!globalThis.__ficusjs__.workers.has(worker)) {\n        const elements = new Set()\n        elements.add(that)\n        globalThis.__ficusjs__.workers.set(worker, elements)\n      } else {\n        const elements = globalThis.__ficusjs__.workers.get(worker)\n        if (!elements.has(that)) {\n          elements.add(that)\n        }\n      }\n      if (!worker.onmessage) {\n        that.worker.onmessage = e => {\n          const elements = globalThis.__ficusjs__.workers.get(worker)\n          for (const element of elements) {\n            element.state = e.data\n            // clear the getter cache\n            element.computedCache = {}\n            // Run the render processor now that there's changes\n            element._processRender.apply(element)\n          }\n        }\n      }\n      that.store = {\n        dispatch (actionName, payload) {\n          that.worker.postMessage({ actionName, payload })\n        }\n      }\n      if (options.created) options.created.call(that)\n    }\n  }\n}\n","/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nfunction t(t,n){var e=\"function\"==typeof Symbol&&t[Symbol.iterator];if(!e)return t;var r,o,i=e.call(t),a=[];try{for(;(void 0===n||n-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(t){o={error:t}}finally{try{r&&!r.done&&(e=i.return)&&e.call(i)}finally{if(o)throw o.error}}return a}var n;!function(t){t[t.NotStarted=0]=\"NotStarted\",t[t.Running=1]=\"Running\",t[t.Stopped=2]=\"Stopped\"}(n||(n={}));var e={type:\"xstate.init\"};function r(t){return void 0===t?[]:[].concat(t)}function o(t){return{type:\"xstate.assign\",assignment:t}}function i(t,n){return\"string\"==typeof(t=\"string\"==typeof t&&n&&n[t]?n[t]:t)?{type:t}:\"function\"==typeof t?{type:t.name,exec:t}:t}function a(t){return function(n){return t===n}}function u(t){return\"string\"==typeof t?{type:t}:t}function c(t,n){return{value:t,context:n,actions:[],changed:!1,matches:a(t)}}function f(t,n,e){var r=n,o=!1;return[t.filter((function(t){if(\"xstate.assign\"===t.type){o=!0;var n=Object.assign({},r);return\"function\"==typeof t.assignment?n=t.assignment(r,e):Object.keys(t.assignment).forEach((function(o){n[o]=\"function\"==typeof t.assignment[o]?t.assignment[o](r,e):t.assignment[o]})),r=n,!1}return!0})),r,o]}function s(n,o){void 0===o&&(o={});var s=t(f(r(n.states[n.initial].entry).map((function(t){return i(t,o.actions)})),n.context,e),2),l=s[0],y=s[1],p={config:n,_options:o,initialState:{value:n.initial,actions:l,context:y,matches:a(n.initial)},transition:function(e,o){var s,l,y=\"string\"==typeof e?{value:e,context:n.context}:e,v=y.value,g=y.context,d=u(o),x=n.states[v];if(x.on){var h=r(x.on[d.type]);\"*\"in x.on&&h.push.apply(h,function(t,n,e){if(e||2===arguments.length)for(var r,o=0,i=n.length;o<i;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return t.concat(r||Array.prototype.slice.call(n))}([],t(r(x.on[\"*\"])),!1));try{for(var m=function(t){var n=\"function\"==typeof Symbol&&Symbol.iterator,e=n&&t[n],r=0;if(e)return e.call(t);if(t&&\"number\"==typeof t.length)return{next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(n?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}(h),b=m.next();!b.done;b=m.next()){var S=b.value;if(void 0===S)return c(v,g);var w=\"string\"==typeof S?{target:S}:S,j=w.target,E=w.actions,R=void 0===E?[]:E,N=w.cond,O=void 0===N?function(){return!0}:N,_=void 0===j,A=null!=j?j:v,k=n.states[A];if(O(g,d)){var T=t(f((_?r(R):[].concat(x.exit,R,k.entry).filter((function(t){return t}))).map((function(t){return i(t,p._options.actions)})),g,d),3),q=T[0],z=T[1],B=T[2],C=null!=j?j:v;return{value:C,context:z,actions:q,changed:j!==v||q.length>0||B,matches:a(C)}}}}catch(t){s={error:t}}finally{try{b&&!b.done&&(l=m.return)&&l.call(m)}finally{if(s)throw s.error}}}return c(v,g)}};return p}var l=function(t,n){return t.actions.forEach((function(e){var r=e.exec;return r&&r(t.context,n)}))};function y(t){var r=t.initialState,o=n.NotStarted,i=new Set,c={_machine:t,send:function(e){o===n.Running&&(r=t.transition(r,e),l(r,u(e)),i.forEach((function(t){return t(r)})))},subscribe:function(t){return i.add(t),t(r),{unsubscribe:function(){return i.delete(t)}}},start:function(i){if(i){var u=\"object\"==typeof i?i:{context:t.config.context,value:i};r={value:u.value,actions:[],context:u.context,matches:a(u.value)}}else r=t.initialState;return o=n.Running,l(r,e),c},stop:function(){return o=n.Stopped,i.clear(),c},get state(){return r},get status(){return o}};return c}export{n as InterpreterStatus,o as assign,s as createMachine,y as interpret};\n","import { assign, createMachine, interpret as interpretXState } from './lib/xstate-fsm.mjs'\nimport { wrapXStateService, XStateServiceStatus } from './util/wrap-xstate-service.mjs'\n\nfunction interpret (machine, getters, persist) {\n  const service = wrapXStateService(interpretXState(machine), getters, persist)\n  return service\n}\n\nfunction createXStateService (key, machine, getters, persist) {\n  const service = interpret(machine, getters, persist)\n  globalThis.__ficusjs__ = globalThis.__ficusjs__ || {}\n  globalThis.__ficusjs__.xstate = globalThis.__ficusjs__.xstate || {}\n  globalThis.__ficusjs__.xstate[key] = service\n  return service\n}\n\nfunction addXStateService (key, service) {\n  globalThis.__ficusjs__ = globalThis.__ficusjs__ || {}\n  globalThis.__ficusjs__.xstate = globalThis.__ficusjs__.xstate || {}\n  globalThis.__ficusjs__.xstate[key] = service\n  return service\n}\n\nfunction getXStateService (key) {\n  if (globalThis.__ficusjs__ && globalThis.__ficusjs__.xstate && globalThis.__ficusjs__.xstate[key]) {\n    return globalThis.__ficusjs__.xstate[key]\n  }\n}\n\nexport {\n  XStateServiceStatus,\n  addXStateService,\n  assign,\n  createMachine,\n  createXStateService,\n  getXStateService,\n  interpret,\n  wrapXStateService\n}\n"],"names":["BasePersist","constructor","namespace","storage","options","this","_init","globalThis","clearOnReload","entries","performance","getEntriesByType","map","e","type","lastUpdated","includes","removeState","setState","state","setItem","_normalizeState","Date","getTime","toString","saveState","JSON","stringify","getState","getItem","parse","undefined","parseInt","removeItem","createPersist","storageName","localStorage","sessionStorage","withStore","store","created","_subscribeCallback","computedCache","isCreatedCalled","_processRender","setStore","call","mounted","_subscribeToStores","updated","removed","_unsubscribeFromStores","invokeSubscribeCallback","subscribe","unsubscribe","Object","keys","forEach","k","isPromise","obj","then","Store","self","getterCache","status","transaction","transactionCache","callbacks","_processActions","initialState","copyOfInitialState","_copyValue","ttl","lastUpdatedState","persist","initState","_lastUpdatedTimeDiff","_processState","length","key","bind","Proxy","set","value","_processCallbacks","get","Math","round","stateFn","setter","data","isExistingTransaction","res","result","Array","isArray","match","reduce","prevObj","callback","Error","push","filter","c","clear","notifySubscribers","createAppState","getAppState","__ficusjs__","StateMachine","machine","initial","states","transition","event","on","createStateMachine","withLocalState","_state","_monitorState","existingUpdated","objectInstance","property","withStateMachine","stateMachineDefinition","_stateMachineDefinition","_stateMachine","context","matches","v","send","eventType","eventPayload","payload","nextState","nextStateValue","target","nextStateAction","action","actions","wrapXStateService","service","getters","wrappedService","_xstateService","_getterCache","_persist","XStateServiceStatus","INIT","RUNNING","start","freeze","NOT_STARTED","STOPPED","withXStateService","setXStateService","_subscribeToFsmService","_unsubscribeFromFsmService","fsm","_fsmSubscriptionCallback","_fsmSubscription","_startFsmService","withWorkerStore","worker","that","workers","Map","has","elements","add","Set","onmessage","element","apply","dispatch","actionName","postMessage","t","n","Symbol","iterator","r","o","i","a","next","done","error","return","NotStarted","Running","Stopped","concat","assignment","name","exec","u","changed","f","assign","s","entry","l","y","p","config","_options","g","d","x","h","arguments","prototype","slice","m","TypeError","b","S","w","j","E","R","N","cond","O","_","A","T","exit","q","z","B","C","interpret","_machine","delete","stop","interpretXState","createXStateService","xstate","addXStateService","getXStateService"],"mappings":"AAAA,MAAMA,EAOJ,WAAAC,CAAaC,EAAWC,EAASC,EAAU,CAAA,GACzCC,KAAKH,UAAYA,EACjBG,KAAKF,QAAUA,EACfE,KAAKD,QAAUA,EACfC,KAAKC,OACN,CAMD,KAAAA,GACE,GAAI,gBAAiBC,YAAcF,KAAKD,QAAQI,cAAe,CAE7D,MAAMC,EAAUF,WAAWG,YAAYC,iBAAiB,cAAcC,KAAIC,GAAKA,EAAEC,OAC7DT,KAAKU,eACNN,EAAQO,SAAS,WAClCX,KAAKY,aAER,CACF,CAMD,QAAAC,CAAUC,GACJA,GACFd,KAAKF,QAAQiB,QAAQ,GAAGf,KAAKH,kBAAmBG,KAAKgB,gBAAgBF,IACrEd,KAAKF,QAAQiB,QAAQ,GAAGf,KAAKH,yBAAyB,IAAIoB,MAAOC,UAAUC,aAE3EnB,KAAKY,aAER,CAQD,eAAAI,CAAiBF,GACf,MAAqB,iBAAVA,GAAuBd,KAAKD,QAAQqB,WAA+C,mBAA3BpB,KAAKD,QAAQqB,UACvEC,KAAKC,UAAUtB,KAAKD,QAAQqB,UAAUN,IACnB,iBAAVA,EACTO,KAAKC,UAAUR,GAEjBA,CACR,CAMD,QAAAS,GACE,MAAMT,EAAQd,KAAKF,QAAQ0B,QAAQ,GAAGxB,KAAKH,mBAC3C,OAAOiB,EAAQO,KAAKI,MAAMX,QAASY,CACpC,CAMD,WAAAhB,GACE,MAAMA,EAAcV,KAAKF,QAAQ0B,QAAQ,GAAGxB,KAAKH,yBACjD,OAAOa,EAAciB,SAASjB,EAAa,SAAMgB,CAClD,CAKD,WAAAd,GACEZ,KAAKF,QAAQ8B,WAAW,GAAG5B,KAAKH,mBAChCG,KAAKF,QAAQ8B,WAAW,GAAG5B,KAAKH,wBACjC,EAUH,SAASgC,cAAehC,EAAWiC,EAAc,UAAW/B,GAC1D,OACS,IAAIJ,EAAYE,EADL,UAAhBiC,EACgC5B,WAAW6B,aAEb7B,WAAW8B,eAFgBjC,EAG/D,CChGO,SAASkC,UAAWC,EAAOnC,GAChC,MAAO,IACFA,EACH,OAAAoC,GAEEnC,KAAKoC,mBAAqB,KAExBpC,KAAKqC,cAAgB,CAAE,EAGvBrC,KAAKsC,iBAAmBtC,KAAKuC,gBAAgB,EAE/CvC,KAAKwC,SAASN,GACVnC,EAAQoC,SAASpC,EAAQoC,QAAQM,KAAKzC,KAC3C,EACD,OAAA0C,GACE1C,KAAK2C,oBAAmB,GACpB5C,EAAQ2C,SAAS3C,EAAQ2C,QAAQD,KAAKzC,KAC3C,EACD,OAAA4C,GACE5C,KAAK2C,oBAAmB,GACpB5C,EAAQ6C,SAAS7C,EAAQ6C,QAAQH,KAAKzC,KAC3C,EACD,OAAA6C,GACE7C,KAAK8C,yBACD/C,EAAQ8C,SAAS9C,EAAQ8C,QAAQJ,KAAKzC,KAC3C,EACD,QAAAwC,CAAUN,GACRlC,KAAKkC,MAAQA,EACblC,KAAK2C,oBACN,EACD,kBAAAA,CAAoBI,GAA0B,GAC5C,GAAI/C,KAAKkC,OAASlC,KAAKkC,MAAMc,WAA6C,mBAAzBhD,KAAKkC,MAAMc,YAA6BhD,KAAKiD,YAC5FjD,KAAKiD,YAAcjD,KAAKkC,MAAMc,UAAUhD,KAAKoC,oBACzCW,GAAyB/C,KAAKoC,0BAC7B,GAAIpC,KAAKkC,OAA+B,iBAAflC,KAAKkC,QAAuBlC,KAAKkC,MAAMc,UAAW,CAChFhD,KAAKiD,YAAc,CAAE,EACRC,OAAOC,KAAKnD,KAAKkC,OACzBkB,SAAQC,IACPrD,KAAKkC,MAAMmB,IAAMrD,KAAKkC,MAAMmB,GAAGL,WAAgD,mBAA5BhD,KAAKkC,MAAMmB,GAAGL,YAA6BhD,KAAKiD,YAAYI,KACjHrD,KAAKiD,YAAYI,GAAKrD,KAAKkC,MAAMmB,GAAGL,UAAUhD,KAAKoC,oBACpD,IAECW,GAAyB/C,KAAKoC,oBACnC,CACF,EACD,sBAAAU,GACE,GAAI9C,KAAKkC,OAASlC,KAAKiD,aAA2C,iBAArBjD,KAAKiD,YAA0B,CAC7DC,OAAOC,KAAKnD,KAAKiD,aACzBG,SAAQC,IACXrD,KAAKiD,YAAYI,IAAI,IAEvBrD,KAAKiD,YAAc,IAC3B,MAAiBjD,KAAKkC,OAASlC,KAAKiD,aAA2C,mBAArBjD,KAAKiD,cACvDjD,KAAKiD,cACLjD,KAAKiD,YAAc,KAEtB,EAEL,CC3DO,SAASK,UAAWC,GACzB,OAAuB,iBAARA,GAAmC,mBAARA,IAA2C,mBAAbA,EAAIC,IAC9E,CCCO,MAAMC,EACX,WAAA7D,CAAaG,GACX,MAAM2D,EAAO1D,KAGb0D,EAAK5C,MAAQ,CAAE,EAGf4C,EAAKC,YAAc,CAAE,EAGrBD,EAAKE,OAAS,UAGdF,EAAKG,aAAc,EACnBH,EAAKI,iBAAmB,CAAE,EAG1BJ,EAAKK,UAAY,GAGjB/D,KAAKgE,gBAAgBjE,GAGrB,IAAIkE,EAAelE,EAAQkE,cAAgB,CAAE,EAa7C,GAZAP,EAAKQ,mBAAqBR,EAAKS,WAAWF,GAG1CP,EAAKU,KAAO,EACZV,EAAKW,iBAAmB,CAAE,EACtBtE,EAAQqE,MACVV,EAAKU,IAAMrE,EAAQqE,IACnBlB,OAAOC,KAAKO,EAAKQ,oBAAoBd,SAAQC,GAAMK,EAAKW,iBAAiBhB,IAAK,IAAIpC,MAAOC,aAI3FwC,EAAKY,aAAU5C,EACX3B,EAAQuE,QAAS,CACnBZ,EAAKY,QAAqC,iBAApBvE,EAAQuE,QAAuBzC,cAAc9B,EAAQuE,SAAWvE,EAAQuE,QAG9F,MAAMC,EAAYb,EAAKY,QAAQ/C,WACzBb,EAAcgD,EAAKY,QAAQ5D,cAC7B6D,GACF7D,KACe,IAAdgD,EAAKU,KAAcV,EAAKc,qBAAqB9D,GAAegD,EAAKU,OAClEH,EAAeM,EAElB,CAGDvE,KAAKyE,cAAcR,EACpB,CAOD,eAAAD,CAAiBjE,GACf,MAAM2D,EAAO1D,KACPmD,EAAOD,OAAOC,KAAKpD,GACpBoD,EAAKuB,QAGVvB,EAAKC,SAAQuB,IACNjB,EAAKiB,IAAgC,mBAAjB5E,EAAQ4E,KAC/BjB,EAAKiB,GAAO5E,EAAQ4E,GAAKC,KAAKlB,GAC/B,GAEJ,CAOD,aAAAe,CAAeR,GACb,MAAMP,EAAO1D,KAIb0D,EAAK5C,MAAQ,IAAI+D,MAAMZ,EAAc,CACnCa,IAAI,CAAChE,EAAO6D,EAAKI,KAEXrB,EAAKG,cAAgBH,EAAKI,iBAAiBa,KAC7CjB,EAAKI,iBAAiBa,GAAOjB,EAAKS,WAAWrD,EAAM6D,KAIrD7D,EAAM6D,GAAOI,EACbrB,EAAKW,iBAAiBM,IAAO,IAAI1D,MAAOC,UAGxCwC,EAAKC,YAAc,CAAE,EAEhBD,EAAKG,cAEJH,EAAKY,SACPZ,EAAKY,QAAQzD,SAAS6C,EAAK5C,OAI7B4C,EAAKE,OAAS,UAIdF,EAAKsB,kBAAkBtB,EAAK5C,SAGvB,GAETmE,IAAI,CAACnE,EAAO6D,IACNjB,EAAKU,KAAO,GAAKV,EAAKc,qBAAqBd,EAAKW,iBAAiBM,IAAQjB,EAAKU,KAC5EV,EAAKY,SACPZ,EAAKY,QAAQ1D,cAER8C,EAAKQ,mBAAmBS,IAE1B7D,EAAM6D,IAGlB,CAQD,oBAAAH,CAAsBO,GACpB,OAAOG,KAAKC,OAAO,IAAIlE,MAAOC,UAAY6D,EAC3C,CAOD,QAAAlE,CAAUuE,GACR,MAAMC,OAASC,IACb,IAAKA,GAAwB,iBAATA,EAAmB,OAEvC,MAAMC,EAAwBvF,KAAK6D,YAG9B0B,IACHvF,KAAK8D,iBAAmB,CAAE,EAC1B9D,KAAK6D,aAAc,GAGrB,IAAK,MAAMc,KAAOW,EACXtF,KAAKc,MAAM6D,IAAS3E,KAAKc,MAAM6D,KAASW,EAAKX,KAAO3E,KAAKc,MAAM6D,GAAOW,EAAKX,IAI7EY,IACHvF,KAAK6D,aAAc,EAGf7D,KAAKsE,SACPtE,KAAKsE,QAAQzD,SAASb,KAAKc,OAG7Bd,KAAKgF,kBAAkBhF,KAAKc,OAC7B,EAIG0E,EAAMJ,EAAQpF,KAAKc,OAGzBwC,UAAUkC,GAAOA,EAAIhC,KAAK6B,QAAUA,OAAOG,EAC5C,CAOD,QAAAjE,CAAUoD,GAER,GAAKA,IAAuB,iBAARA,GAAmC,mBAARA,GAA/C,CAGA,IAAK3E,KAAK2D,YAAYgB,GAAM,CAC1B,IAAIc,EACJ,GAAmB,mBAARd,EACTc,EAASd,EAAI3E,KAAKc,WACb,CAOL2E,GAJiBC,MAAMC,QAAQhB,GAAOA,EAAMA,EAAIiB,MAAM,gBAIpCC,QAAO,CAACC,EAASnB,IAAQmB,GAAWA,EAAQnB,IAAM3E,KAAKc,MAC1E,CAGD,GAAc,MAAV2E,EAAgB,OAGpBzF,KAAK2D,YAAYgB,GAAOc,CACzB,CAED,OAAOzF,KAAK2D,YAAYgB,EAxBmDjD,CAyB5E,CAUD,iBAAAsD,CAAmBM,GACjB,QAAKtF,KAAK+D,UAAUW,SAKpB1E,KAAK+D,UAAUX,SAAQ2C,GAAYA,EAAST,MAErC,EACR,CASD,SAAAtC,CAAW+C,GACT,GAAwB,mBAAbA,EACT,MAAM,IAAIC,MAAM,uEAWlB,OAFKhG,KAAK+D,UAAUpD,SAASoF,IAAW/F,KAAK+D,UAAUkC,KAAKF,GALxC,KAClB/F,KAAK+D,UAAY/D,KAAK+D,UAAUmC,QAAOC,GAAKA,IAAMJ,GAAS,CAO9D,CAQD,UAAA5B,CAAYY,GACV,OAAKA,EACE1D,KAAKI,MAAMJ,KAAKC,UAAUyD,IADdA,CAEpB,CAOD,KAAAqB,CAAOC,GAAoB,GACzBrG,KAAK2D,YAAc,CAAE,EACrB3D,KAAK8D,iBAAmB,CAAE,EAC1B9D,KAAKqE,iBAAmB,CAAE,EAGtBrE,KAAKsE,SACPtE,KAAKsE,QAAQ1D,cAIfZ,KAAK6D,aAAc,EACnB7D,KAAK4D,OAAS,QAGd,MAAMK,EAAejE,KAAKmE,WAAWnE,KAAKkE,oBAC1C,IAAK,MAAMS,KAAOV,EAChBjE,KAAKc,MAAM6D,GAAOV,EAAaU,GAGjC3E,KAAK6D,aAAc,EACnB7D,KAAK4D,OAAS,UAEVyC,GAAmBrG,KAAKgF,kBAAkBhF,KAAKc,MACpD,EC5RH,SAASwF,eAAgB3B,EAAK5E,GAC5B,IAAImC,EAAQqE,YAAY5B,GACxB,OAAIzC,IACJA,EAAQ,IAAIuB,EAAM1D,GAClBG,WAAWsG,YAActG,WAAWsG,aAAe,CAAE,EACrDtG,WAAWsG,YAAYtE,MAAQhC,WAAWsG,YAAYtE,OAAS,CAAE,EACjEhC,WAAWsG,YAAYtE,MAAMyC,GAAOzC,EAC7BA,EACT,CAOA,SAASqE,YAAa5B,GACpB,GAAIzE,WAAWsG,aAAetG,WAAWsG,YAAYtE,OAAShC,WAAWsG,YAAYtE,MAAMyC,GACzF,OAAOzE,WAAWsG,YAAYtE,MAAMyC,EAExC,CC7BA,MAAM8B,EAKJ,WAAA7G,CAAa8G,GACX1G,KAAK0G,QAAUA,CAChB,CAOD,gBAAIzC,GACF,OAAOjE,KAAK0G,QAAQC,SAAWzD,OAAOC,KAAKnD,KAAK0G,QAAQE,QAAQ,EACjE,CAQD,UAAAC,CAAY/F,EAAOgG,GACjB,OAAO9G,KAAK0G,QAAQE,OAAO9F,GAAOiG,GAAGD,EACtC,EAQI,SAASE,mBAAoBN,GAClC,OAAO,IAAID,EAAaC,EAC1B,CClCO,SAASO,eAAgBlH,GAC9B,MAAO,IACFA,EACH,OAAAoC,GAEE,GAAIpC,EAAQe,OAAkC,mBAAlBf,EAAQe,MAAsB,MAAM,IAAIkF,MAAM,6BAC1EhG,KAAKkH,OAASnH,EAAQe,OAAS,CAAE,EAGN,mBAAhBd,KAAKkH,SACdlH,KAAKkH,OAASlH,KAAKkH,OAAOtC,KAAK5E,KAAjBA,IAEhBA,KAAKc,MAAQd,KAAKmH,cAAcnH,KAAKkH,QAGrClH,KAAKa,SAAW,CAACuE,EAASW,KACxB,MAAMV,OAASC,IACb,IAAKA,GAAwB,iBAATA,EAAmB,OACvC,MAAM8B,EAAkBpH,KAAK4C,QACzBmD,IACF/F,KAAK4C,QAAU,KACbmD,IACA/F,KAAK4C,QAAUwE,QAAmB1F,CAAS,GAG/C1B,KAAK4D,OAAS,cACd,IAAK,MAAMe,KAAOW,EACXtF,KAAKc,MAAM6D,IAAS3E,KAAKc,MAAM6D,KAASW,EAAKX,KAAO3E,KAAKc,MAAM6D,GAAOW,EAAKX,IAElF3E,KAAK4D,OAAS,SACd5D,KAAKuC,gBAAgB,EAEjBiD,EAAMJ,EAAQpF,KAAKc,OACzBwC,UAAUkC,GAAOA,EAAIhC,KAAK6B,QAAUA,OAAOG,EAAI,EAG7CzF,EAAQoC,SAASpC,EAAQoC,QAAQM,KAAKzC,KAC3C,EACD,aAAAmH,CAAeE,GACb,MAAM3D,EAAO1D,KAEb,OAAO,IAAI6E,MAAMwC,EAAgB,CAC/BvC,IAAI,CAACvB,EAAK+D,EAAUvC,KAEdxB,EAAI+D,KAAcvC,IAGtBxB,EAAI+D,GAAYvC,EAGhBrB,EAAKrB,cAAgB,CAAE,EAGH,WAAhBqB,EAAKE,QAAqBF,EAAKnB,mBATC,IAczC,EAEL,CC5DO,SAASgF,iBAAkBC,EAAwBzH,GACxD,MAAO,IACFA,EACH,OAAAoC,GACEnC,KAAKyH,wBAA0BD,EAC/BxH,KAAK0H,cAAgBV,mBAAmBQ,GACxCxH,KAAKiE,aAAejE,KAAK0H,cAAczD,aACvCjE,KAAKc,MAAQ,CACX6G,QAAS,CAAE,EACX,OAAAC,CAASC,GACP,OAAOA,IAAM7H,KAAK+E,KACnB,EACDA,MAAO/E,KAAKiE,cAEdjE,KAAKa,SAAW,CAACyE,EAAMS,KACrB,IAAKT,GAAwB,iBAATA,EAAmB,OACvC,MAAM8B,EAAkBpH,KAAK4C,QACzBmD,IACF/F,KAAK4C,QAAU,KACbmD,EAAStD,KAAKzC,MACdA,KAAK4C,QAAUwE,QAAmB1F,CAAS,GAG/C1B,KAAK4D,OAAS,cACd,IAAK,MAAMe,KAAOW,EACJ,UAARX,EACF3E,KAAKc,MAAM6D,GAAOW,EAAKX,GACb3E,KAAKc,MAAM6G,QAAQhD,IAAS3E,KAAKc,MAAM6G,QAAQhD,KAASW,EAAKX,KACvE3E,KAAKc,MAAM6G,QAAQhD,GAAOW,EAAKX,IAGnC3E,KAAK4D,OAAS,SACd5D,KAAKuC,gBAAgB,EAEnBxC,EAAQoC,SAASpC,EAAQoC,QAAQM,KAAKzC,KAC3C,EACD,IAAA8H,CAAMhB,GACJ,IAAIiB,EACAC,EACJ,GAAqB,iBAAVlB,EACTiB,EAAYjB,MACP,CACL,MAAMrG,KAAEA,KAASwH,GAAYnB,EAC7BiB,EAAYtH,EACZuH,EAAeC,CAChB,CACD,MAAMlD,MAAEA,GAAU/E,KAAKc,MACjBoH,EAAYlI,KAAK0H,cAAcb,WAAW9B,EAAOgD,IAAchD,EAC/DoD,EAAsC,iBAAdD,GAA0BA,EAAUE,OAASF,EAAUE,OAASF,EACxFG,EAAuC,iBAAdH,GAA0BA,EAAUI,OAASJ,EAAUI,OAASJ,EACzFI,EAAStI,KAAKyH,wBAAwBc,SAAWvI,KAAKyH,wBAAwBc,QAAQF,GACxF,IAAMrI,KAAKyH,wBAAwBc,QAAQF,GAAiB5F,KAAKzC,KAAMgI,GACvE,OACJhI,KAAKa,SAAS,CAAEkE,MAAOoD,GAAkBG,EAC1C,EAEL,CCxDO,SAASE,kBAAmBC,EAASC,EAASpE,GACnD,MAAMqE,EAAiB,CACrBC,eAAgBH,EAChBI,aAAc,CAAE,EAChBC,SAA6B,iBAAZxE,EAAuBzC,cAAcyC,GAAWA,EACjE,UAAIV,GACF,OAAK5D,KAAK4I,eACH5I,KAAK4I,eAAehF,OADMmF,EAAoBC,IAEtD,EACD,SAAIlI,GACF,OAAOd,KAAK4I,eAAe9H,KAC5B,EACD,SAAAkC,CAAW+C,GACT,OAAO/F,KAAK4I,eAAe5F,WAAU,KACnChD,KAAK6I,aAAe,CAAE,EAClB7I,KAAK8I,UAAY9I,KAAK4I,eAAehF,SAAWmF,EAAoBE,SACtEjJ,KAAK8I,SAASjI,SAASb,KAAK4I,eAAe9H,OAE7CiF,GAAU,GAEb,EACD,IAAA+B,CAAMQ,GACJtI,KAAK4I,eAAed,KAAKQ,EAC1B,EACD,KAAAY,GACElJ,KAAK4I,eAAeM,MAAMlJ,KAAK8I,SAAW9I,KAAK8I,SAASvH,gBAAaG,EACtE,GAaH,OAXIgH,IACFC,EAAeD,QAAU,IAAI7D,MAAM6D,EAAS,CAC1C,GAAAzD,CAAKyD,EAAS/D,GACZ,IAAKgE,EAAeE,aAAalE,GAAM,CACrC,MAAMc,EAASiD,EAAQ/D,GAAKgE,EAAeC,eAAe9H,MAAM6G,SAChEgB,EAAeE,aAAalE,GAAOc,CACpC,CACD,OAAOkD,EAAeE,aAAalE,EACpC,KAGEgE,CACT,CAEY,MAACI,EAAsB7F,OAAOiG,OAAO,CAC/CH,MAAO,EACPI,YAAa,EACbH,QAAS,EACTI,QAAS,IC9CJ,SAASC,kBAAmBb,EAAS1I,GAC1C,MAAO,IACFA,EACH,OAAAoC,GACEnC,KAAKoC,mBAAqB,KAExBpC,KAAKqC,cAAgB,CAAE,EAGvBrC,KAAKuC,gBAAgB,EAEvBvC,KAAKuJ,iBAAiBd,GAClB1I,EAAQoC,SAASpC,EAAQoC,QAAQM,KAAKzC,KAC3C,EACD,OAAA0C,GACE1C,KAAKwJ,wBAAuB,GACxBzJ,EAAQ2C,SAAS3C,EAAQ2C,QAAQD,KAAKzC,KAC3C,EACD,OAAA4C,GACE5C,KAAKwJ,wBAAuB,GACxBzJ,EAAQ6C,SAAS7C,EAAQ6C,QAAQH,KAAKzC,KAC3C,EACD,OAAA6C,GACE7C,KAAKyJ,6BACD1J,EAAQ8C,SAAS9C,EAAQ8C,QAAQJ,KAAKzC,KAC3C,EACD,gBAAAuJ,CAAkBd,GAChBzI,KAAK0J,IAAMjB,GAAWA,EAAQ7E,SAAWmF,EAAoBC,KAAOP,EAAUD,kBAAkBC,GAChGzI,KAAK2J,yBAA2B,KAC1B3J,KAAK0J,IAAI9F,SAAWmF,EAAoBE,SAAWjJ,KAAK4J,kBAC1D5J,KAAKoC,oBACN,EAEHpC,KAAKwJ,wBACN,EACD,gBAAAK,GACM7J,KAAK0J,KAAO1J,KAAK4J,kBAAoB5J,KAAK0J,IAAI9F,SAAWmF,EAAoBK,aAC/EpJ,KAAK0J,IAAIR,OAEZ,EACD,sBAAAM,CAAwBzG,GAA0B,GAC5C/C,KAAK0J,KAAO1J,KAAK0J,IAAI9F,SAAWmF,EAAoBC,OAAShJ,KAAK4J,mBACpE5J,KAAK4J,iBAAmB5J,KAAK0J,IAAI1G,UAAUhD,KAAK2J,0BAC5C5G,GAAyB/C,KAAK2J,2BAClC3J,KAAK6J,mBAER,EACD,0BAAAJ,GACMzJ,KAAK0J,KAAO1J,KAAK0J,IAAI9F,SAAWmF,EAAoBC,MAAQhJ,KAAK4J,kBAAqD,mBAA1B5J,KAAK4J,mBACnG5J,KAAK4J,mBACL5J,KAAK4J,iBAAmB,KAE3B,EAEL,CCxDO,SAASE,gBAAiBC,EAAQhK,GACvC,MAAO,IACFA,EACH,OAAAoC,GACE,MAAM6H,EAAOhK,KAIb,GAHAgK,EAAKD,OAASA,EACd7J,WAAWsG,YAActG,WAAWsG,aAAe,CAAE,EACrDtG,WAAWsG,YAAYyD,QAAU/J,WAAWsG,YAAYyD,SAAW,IAAIC,IAClEhK,WAAWsG,YAAYyD,QAAQE,IAAIJ,GAIjC,CACL,MAAMK,EAAWlK,WAAWsG,YAAYyD,QAAQhF,IAAI8E,GAC/CK,EAASD,IAAIH,IAChBI,EAASC,IAAIL,EAEhB,KATgD,CAC/C,MAAMI,EAAW,IAAIE,IACrBF,EAASC,IAAIL,GACb9J,WAAWsG,YAAYyD,QAAQnF,IAAIiF,EAAQK,EACnD,CAMWL,EAAOQ,YACVP,EAAKD,OAAOQ,UAAY/J,IACtB,MAAM4J,EAAWlK,WAAWsG,YAAYyD,QAAQhF,IAAI8E,GACpD,IAAK,MAAMS,KAAWJ,EACpBI,EAAQ1J,MAAQN,EAAE8E,KAElBkF,EAAQnI,cAAgB,CAAE,EAE1BmI,EAAQjI,eAAekI,MAAMD,EAC9B,GAGLR,EAAK9H,MAAQ,CACX,QAAAwI,CAAUC,EAAY1C,GACpB+B,EAAKD,OAAOa,YAAY,CAAED,aAAY1C,WACvC,GAEClI,EAAQoC,SAASpC,EAAQoC,QAAQM,KAAKuH,EAC3C,EAEL;;;;;;;;;;;;;;gFCxBA,SAASa,EAAEA,EAAEC,GAAG,IAAItK,EAAE,mBAAmBuK,QAAQF,EAAEE,OAAOC,UAAU,IAAIxK,EAAE,OAAOqK,EAAE,IAAII,EAAEC,EAAEC,EAAE3K,EAAEiC,KAAKoI,GAAGO,EAAE,GAAG,IAAI,WAAM,IAASN,GAAGA,KAAK,MAAMG,EAAEE,EAAEE,QAAQC,MAAMF,EAAEnF,KAAKgF,EAAElG,MAAM,CAAC,MAAM8F,GAAGK,EAAE,CAACK,MAAMV,EAAE,CAAC,QAAQ,IAAII,IAAIA,EAAEK,OAAO9K,EAAE2K,EAAEK,SAAShL,EAAEiC,KAAK0I,EAAE,CAAC,QAAQ,GAAGD,EAAE,MAAMA,EAAEK,KAAK,CAAC,CAAC,OAAOH,CAAC,CAAC,IAAIN,GAAG,SAASD,GAAGA,EAAEA,EAAEY,WAAW,GAAG,aAAaZ,EAAEA,EAAEa,QAAQ,GAAG,UAAUb,EAAEA,EAAEc,QAAQ,GAAG,SAAS,CAA5F,CAA8Fb,IAAIA,EAAE,KAAK,IAAItK,EAAE,CAACC,KAAK,eAAe,SAASwK,EAAEJ,GAAG,YAAO,IAASA,EAAE,GAAG,GAAGe,OAAOf,EAAE,CAAC,SAASK,EAAEL,GAAG,MAAM,CAACpK,KAAK,gBAAgBoL,WAAWhB,EAAE,CAAC,SAASM,EAAEN,EAAEC,GAAG,MAAM,iBAAiBD,EAAE,iBAAiBA,GAAGC,GAAGA,EAAED,GAAGC,EAAED,GAAGA,GAAG,CAACpK,KAAKoK,GAAG,mBAAmBA,EAAE,CAACpK,KAAKoK,EAAEiB,KAAKC,KAAKlB,GAAGA,CAAC,CAAC,SAASO,EAAEP,GAAG,OAAO,SAASC,GAAG,OAAOD,IAAIC,CAAC,CAAC,CAAC,SAASkB,EAAEnB,GAAG,MAAM,iBAAiBA,EAAE,CAACpK,KAAKoK,GAAGA,CAAC,CAAC,SAAS1E,EAAE0E,EAAEC,GAAG,MAAM,CAAC/F,MAAM8F,EAAElD,QAAQmD,EAAEvC,QAAQ,GAAG0D,SAAQ,EAAGrE,QAAQwD,EAAEP,GAAG,CAAC,SAASqB,EAAErB,EAAEC,EAAEtK,GAAG,IAAIyK,EAAEH,EAAEI,GAAE,EAAG,MAAM,CAACL,EAAE3E,QAAM,SAAW2E,GAAG,GAAG,kBAAkBA,EAAEpK,KAAK,CAACyK,GAAE,EAAG,IAAIJ,EAAE5H,OAAOiJ,OAAO,CAAA,EAAGlB,GAAG,MAAM,mBAAmBJ,EAAEgB,WAAWf,EAAED,EAAEgB,WAAWZ,EAAEzK,GAAG0C,OAAOC,KAAK0H,EAAEgB,YAAYzI,SAAO,SAAW8H,GAAGJ,EAAEI,GAAG,mBAAmBL,EAAEgB,WAAWX,GAAGL,EAAEgB,WAAWX,GAAGD,EAAEzK,GAAGqK,EAAEgB,WAAWX,EAAG,IAAGD,EAAEH,GAAE,CAAE,CAAC,OAAM,CAAG,IAAGG,EAAEC,EAAE,CAAC,SAASkB,EAAEtB,EAAEI,QAAG,IAASA,IAAIA,EAAE,IAAI,IAAIkB,EAAEvB,EAAEqB,EAAEjB,EAAEH,EAAElE,OAAOkE,EAAEnE,SAAS0F,OAAO9L,cAAcsK,GAAG,OAAOM,EAAEN,EAAEK,EAAE3C,QAAS,IAAGuC,EAAEnD,QAAQnH,GAAG,GAAG8L,EAAEF,EAAE,GAAGG,EAAEH,EAAE,GAAGI,EAAE,CAACC,OAAO3B,EAAE4B,SAASxB,EAAEjH,aAAa,CAACc,MAAM+F,EAAEnE,QAAQ4B,QAAQ+D,EAAE3E,QAAQ4E,EAAE3E,QAAQwD,EAAEN,EAAEnE,UAAUE,WAAW,SAASrG,EAAE0K,GAAG,IAAIkB,EAAEE,EAAEC,EAAE,iBAAiB/L,EAAE,CAACuE,MAAMvE,EAAEmH,QAAQmD,EAAEnD,SAASnH,EAAEqH,EAAE0E,EAAExH,MAAM4H,EAAEJ,EAAE5E,QAAQiF,EAAEZ,EAAEd,GAAG2B,EAAE/B,EAAElE,OAAOiB,GAAG,GAAGgF,EAAE9F,GAAG,CAAC,IAAI+F,EAAE7B,EAAE4B,EAAE9F,GAAG6F,EAAEnM,OAAO,MAAMoM,EAAE9F,IAAI+F,EAAE7G,KAAKwE,MAAMqC,EAAE,SAASjC,EAAEC,EAAEtK,GAAG,GAAGA,GAAG,IAAIuM,UAAUrI,OAAO,IAAI,IAAIuG,EAAEC,EAAE,EAAEC,EAAEL,EAAEpG,OAAOwG,EAAEC,EAAED,KAAKD,GAAGC,KAAKJ,IAAIG,IAAIA,EAAEvF,MAAMsH,UAAUC,MAAMxK,KAAKqI,EAAE,EAAEI,IAAID,EAAEC,GAAGJ,EAAEI,IAAI,OAAOL,EAAEe,OAAOX,GAAGvF,MAAMsH,UAAUC,MAAMxK,KAAKqI,GAAG,CAA9L,CAAgM,GAAGD,EAAEI,EAAE4B,EAAE9F,GAAG,QAAO,IAAK,IAAI,IAAI,IAAImG,EAAE,SAASrC,GAAG,IAAIC,EAAE,mBAAmBC,QAAQA,OAAOC,SAASxK,EAAEsK,GAAGD,EAAEC,GAAGG,EAAE,EAAE,GAAGzK,EAAE,OAAOA,EAAEiC,KAAKoI,GAAG,GAAGA,GAAG,iBAAiBA,EAAEnG,OAAO,MAAM,CAAC2G,KAAK,WAAW,OAAOR,GAAGI,GAAGJ,EAAEnG,SAASmG,OAAE,GAAQ,CAAC9F,MAAM8F,GAAGA,EAAEI,KAAKK,MAAMT,EAAE,GAAG,MAAM,IAAIsC,UAAUrC,EAAE,0BAA0B,kCAAkC,CAAxS,CAA0SgC,GAAGM,EAAEF,EAAE7B,QAAQ+B,EAAE9B,KAAK8B,EAAEF,EAAE7B,OAAO,CAAC,IAAIgC,EAAED,EAAErI,MAAM,QAAG,IAASsI,EAAE,OAAOlH,EAAE0B,EAAE8E,GAAG,IAAIW,EAAE,iBAAiBD,EAAE,CAACjF,OAAOiF,GAAGA,EAAEE,EAAED,EAAElF,OAAOoF,EAAEF,EAAE/E,QAAQkF,OAAE,IAASD,EAAE,GAAGA,EAAEE,EAAEJ,EAAEK,KAAKC,OAAE,IAASF,EAAE,WAAW,OAAM,CAAE,EAAEA,EAAEG,OAAE,IAASN,EAAEO,EAAE,MAAMP,EAAEA,EAAE1F,EAAExE,EAAEyH,EAAElE,OAAOkH,GAAG,GAAGF,EAAEjB,EAAEC,GAAG,CAAC,IAAImB,EAAElD,EAAEqB,GAAG2B,EAAE5C,EAAEwC,GAAG,GAAG7B,OAAOiB,EAAEmB,KAAKP,EAAEpK,EAAEgJ,OAAOnG,QAAQ,SAAS2E,GAAG,OAAOA,CAAE,KAAItK,KAAG,SAAWsK,GAAG,OAAOM,EAAEN,EAAE2B,EAAEE,SAASnE,QAAS,IAAGoE,EAAEC,GAAG,GAAGqB,EAAEF,EAAE,GAAGG,EAAEH,EAAE,GAAGI,EAAEJ,EAAE,GAAGK,EAAE,MAAMb,EAAEA,EAAE1F,EAAE,MAAM,CAAC9C,MAAMqJ,EAAEzG,QAAQuG,EAAE3F,QAAQ0F,EAAEhC,QAAQsB,IAAI1F,GAAGoG,EAAEvJ,OAAO,GAAGyJ,EAAEvG,QAAQwD,EAAEgD,GAAG,CAAC,CAAC,CAAC,MAAMvD,GAAGuB,EAAE,CAACb,MAAMV,EAAE,CAAC,QAAQ,IAAIuC,IAAIA,EAAE9B,OAAOgB,EAAEY,EAAE1B,SAASc,EAAE7J,KAAKyK,EAAE,CAAC,QAAQ,GAAGd,EAAE,MAAMA,EAAEb,KAAK,CAAC,CAAC,CAAC,OAAOpF,EAAE0B,EAAE8E,EAAE,GAAG,OAAOH,CAAC,CAAC,IAAIF,EAAE,SAASzB,EAAEC,GAAG,OAAOD,EAAEtC,QAAQnF,SAAS,SAAS5C,GAAG,IAAIyK,EAAEzK,EAAEuL,KAAK,OAAOd,GAAGA,EAAEJ,EAAElD,QAAQmD,EAAG,GAAE,ECXrxF,SAASuD,UAAW3H,EAASgC,EAASpE,GACpC,MAAMmE,EAAUD,kBDUqwF,SAAWqC,GAAG,IAAII,EAAEJ,EAAE5G,aAAaiH,EAAEJ,EAAEW,WAAWN,EAAE,IAAIb,IAAInE,EAAE,CAACmI,SAASzD,EAAE/C,KAAK,SAAStH,GAAG0K,IAAIJ,EAAEY,UAAUT,EAAEJ,EAAEhE,WAAWoE,EAAEzK,GAAG8L,EAAErB,EAAEe,EAAExL,IAAI2K,EAAE/H,kBAAkByH,GAAG,OAAOA,EAAEI,EAAG,IAAG,EAAEjI,UAAU,SAAS6H,GAAG,OAAOM,EAAEd,IAAIQ,GAAGA,EAAEI,GAAG,CAAChI,YAAY,WAAW,OAAOkI,EAAEoD,OAAO1D,EAAE,EAAE,EAAE3B,MAAM,SAASiC,GAAG,GAAGA,EAAE,CAAC,IAAIa,EAAE,iBAAiBb,EAAEA,EAAE,CAACxD,QAAQkD,EAAE4B,OAAO9E,QAAQ5C,MAAMoG,GAAGF,EAAE,CAAClG,MAAMiH,EAAEjH,MAAMwD,QAAQ,GAAGZ,QAAQqE,EAAErE,QAAQC,QAAQwD,EAAEY,EAAEjH,OAAO,MAAMkG,EAAEJ,EAAE5G,aAAa,OAAOiH,EAAEJ,EAAEY,QAAQY,EAAErB,EAAEzK,GAAG2F,CAAC,EAAEqI,KAAK,WAAW,OAAOtD,EAAEJ,EAAEa,QAAQR,EAAE/E,QAAQD,CAAC,EAAE,SAAIrF,GAAQ,OAAOmK,CAAC,EAAE,UAAIrH,GAAS,OAAOsH,CAAC,GAAG,OAAO/E,CAAC,CCV9yGsI,CAAgB/H,GAAUgC,EAASpE,GACrE,OAAOmE,CACT,CAEA,SAASiG,oBAAqB/J,EAAK+B,EAASgC,EAASpE,GACnD,MAAMmE,EAAU4F,UAAU3H,EAASgC,EAASpE,GAI5C,OAHApE,WAAWsG,YAActG,WAAWsG,aAAe,CAAE,EACrDtG,WAAWsG,YAAYmI,OAASzO,WAAWsG,YAAYmI,QAAU,CAAE,EACnEzO,WAAWsG,YAAYmI,OAAOhK,GAAO8D,EAC9BA,CACT,CAEA,SAASmG,iBAAkBjK,EAAK8D,GAI9B,OAHAvI,WAAWsG,YAActG,WAAWsG,aAAe,CAAE,EACrDtG,WAAWsG,YAAYmI,OAASzO,WAAWsG,YAAYmI,QAAU,CAAE,EACnEzO,WAAWsG,YAAYmI,OAAOhK,GAAO8D,EAC9BA,CACT,CAEA,SAASoG,iBAAkBlK,GACzB,GAAIzE,WAAWsG,aAAetG,WAAWsG,YAAYmI,QAAUzO,WAAWsG,YAAYmI,OAAOhK,GAC3F,OAAOzE,WAAWsG,YAAYmI,OAAOhK,EAEzC"}